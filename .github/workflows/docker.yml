name: docker
on:
  push:
    branches:
    - main
    tags:
    - '**'
  pull_request:
    branches:
    - main

env:
  GO_VERSION: "1.18"
  LINUX_ARCHES: "amd64 386 arm arm64 s390x mips64le ppc64le riscv64"

jobs:
  build:
    name: Build all linux architectures
    runs-on: ubuntu-latest
    steps:
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all tags

      - name: Build on all supported architectures
        run: |
          set -e
          ./scripts/release.sh

      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            release*/*

  build-docker-image:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: binaries
        path: |
          release*/*

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all tags

    # See: https://github.com/docker/build-push-action/blob/v2.6.1/docs/advanced/cache.md#github-cache
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Prepare
      id: prep
      run: |
        set -e
        TAG=$( git describe --tags --dirty ) # E.g. v1.2.0-23-g60ee190
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Login to docker registry
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') || github.event_name == 'pull_request'
      run: echo "${DOCKERHUB_REGISTRY_PASSWORD}" | docker login -u "${DOCKERHUB_REGISTRY_USER}" --password-stdin
      env:
        DOCKERHUB_REGISTRY_USER: ${{ vars.DOCKERHUB_REGISTRY_USER }}
        DOCKERHUB_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}

    - name: Build (PRs)
      id: docker_build_pr
      # Run only on pull requests
      if: github.event_name == 'pull_request'
      uses: docker/build-push-action@v3
      with:
        build-args: |
          TAG=${{ env.TAG }}
        context: '.'
        file: ./.docker/release/Dockerfile
        platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x
        push: true
        tags: |
          ${{ github.repository }}:${{ env.TAG }}
          ${{ github.repository }}:${{ env.TAG }}-${{ env.SHA_SHORT }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push (master)
      id: docker_build_master
      # Run only on master
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v3
      with:
        build-args: |
          TAG=${{ env.TAG }}
        context: '.'
        file: ./.docker/release/Dockerfile
        platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x
        push: true
        tags: |
          ${{ github.repository }}:${{ env.TAG }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Build and push (release)
      id: docker_build_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v3
      with:
        build-args: |
          TAG=${{ env.TAG }}
        context: '.'
        file: ./.docker/release/Dockerfile
        platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/s390x
        push: true
        tags: |
          ${{ github.repository }}:${{ env.TAG }}
          ${{ github.repository }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: List docker images
      run: docker images

    - name: Clean-up
      run: docker logout
      if: always()
